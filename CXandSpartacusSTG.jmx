<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="spartacus STG 1402202a4">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.3.14. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;99&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">stg-connect-udp.dksh.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">www.google-analytics.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults">
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager">
        <collectionProp name="DNSCacheManager.servers"/>
        <collectionProp name="DNSCacheManager.hosts"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup">
        <intProp name="ThreadGroup.num_threads">2</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.Header;
 
sampler.getHeaderManager().removeHeaderNamed(&quot;X-CSRFToken&quot;);
newValue=vars.get(&quot;csrfToken&quot;);
sampler.getHeaderManager().add(new Header(&quot;X-CSRFToken&quot;,newValue));</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage before login">
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/login</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="google analytics" enabled="false">
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">j/collect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="de" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">de</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jid</stringProp>
                  <stringProp name="Argument.value">1650088556</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://stg-connect-udp.dksh.com/myhec/en/login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="gjid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gjid</stringProp>
                  <stringProp name="Argument.value">1683456964</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">UA-121969225-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">DKSH Customer Connect Healthcare Malaysia</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_utmz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_utmz</stringProp>
                  <stringProp name="Argument.value">40373856.1639535379.17.5.utmcsr=statics.teams.cdn.office.net|utmccn=(referral)|utmcmd=referral|utmcct=/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1366x768</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">1684592147</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">2wg3n15VDCSC8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_utma" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_utma</stringProp>
                  <stringProp name="Argument.value">40373856.1147206744.1606710317.1639535379.1644300387.18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_gid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_gid</stringProp>
                  <stringProp name="Argument.value">1861558451.1648558625</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd1</stringProp>
                  <stringProp name="Argument.value">(not set)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_r" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_r</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">pageview</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_u</stringProp>
                  <stringProp name="Argument.value">QACCAEABAAAAAC~</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_v</stringProp>
                  <stringProp name="Argument.value">j96</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_utmht" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_utmht</stringProp>
                  <stringProp name="Argument.value">1648559982571</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vp</stringProp>
                  <stringProp name="Argument.value">1795x805</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">z</stringProp>
                  <stringProp name="Argument.value">1773866553</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="je" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">je</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1147206744.1606710317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Username">
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/commonLogin</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uid</stringProp>
                  <stringProp name="Argument.value">101104381</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="CSRFToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">CSRFToken</stringProp>
                  <stringProp name="Argument.value">${token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Username and password">
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/b2bCustomerClause</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uid</stringProp>
                  <stringProp name="Argument.value">101104381</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">dksh1234</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="CSRFToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">CSRFToken</stringProp>
                  <stringProp name="Argument.value">e4748f2d-5804-4a49-b325-e450046ceadd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="spring_security_check">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/j_spring_security_check</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="CSRFToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">CSRFToken</stringProp>
                  <stringProp name="Argument.value">e4748f2d-5804-4a49-b325-e450046ceadd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_password</stringProp>
                  <stringProp name="Argument.value">12341234</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_username</stringProp>
                  <stringProp name="Argument.value">101104381</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">22749.0</stringProp>
              <stringProp name="ConstantTimer.delay">11374.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 22749 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="All Products">
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/All-Products/c/allcategories</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">10211.0</stringProp>
              <stringProp name="ConstantTimer.delay">5105.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 10211 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="All Products API" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/All-Products/c/loadproducts</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="view" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">view</stringProp>
                  <stringProp name="Argument.value">grid</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sort</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="All Products JS">
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">_ui/responsive/common/js/acc.product.js?v=8</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Autocomplete searchbox">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/search/autocomplete/SearchBox</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="term" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">term</stringProp>
                  <stringProp name="Argument.value">100006979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Search 1 product" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/search/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="text" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">text</stringProp>
                  <stringProp name="Argument.value">100006979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">38241.0</stringProp>
              <stringProp name="ConstantTimer.delay">19120.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 38241 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Googlee Analytics" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">j/collect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="de" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">de</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jid</stringProp>
                  <stringProp name="Argument.value">919399179</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://stg-connect-udp.dksh.com/myhec/en/search/?text=100006979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="gjid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gjid</stringProp>
                  <stringProp name="Argument.value">718779069</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">UA-121969225-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Search Results Grid Page</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_utmz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_utmz</stringProp>
                  <stringProp name="Argument.value">40373856.1639535379.17.5.utmcsr=statics.teams.cdn.office.net|utmccn=(referral)|utmcmd=referral|utmcct=/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1366x768</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">1119041366</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">2wg3n15VDCSC8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_utma" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_utma</stringProp>
                  <stringProp name="Argument.value">40373856.1147206744.1606710317.1639535379.1644300387.18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_gid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_gid</stringProp>
                  <stringProp name="Argument.value">1861558451.1648558625</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd1</stringProp>
                  <stringProp name="Argument.value">(not set)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_r" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_r</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">pageview</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_u</stringProp>
                  <stringProp name="Argument.value">QACCAEABAAAAAC~</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_v</stringProp>
                  <stringProp name="Argument.value">j96</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_utmht" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_utmht</stringProp>
                  <stringProp name="Argument.value">1648560054750</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vp</stringProp>
                  <stringProp name="Argument.value">1772x805</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">z</stringProp>
                  <stringProp name="Argument.value">1766175573</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="je" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">je</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1147206744.1606710317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API results PLP" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/search/loadsearchproducts</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">100006979:relevance</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="view" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">view</stringProp>
                  <stringProp name="Argument.value">grid</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sort</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JS 1 Product PLP">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">_ui/responsive/common/js/acc.product.js?v=8</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Product">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/cart/add</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="productPostPrice" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">productPostPrice</stringProp>
                  <stringProp name="Argument.value">54.9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uom" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uom</stringProp>
                  <stringProp name="Argument.value">EA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="CSRFToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">CSRFToken</stringProp>
                  <stringProp name="Argument.value">3723cf5e-fc61-4274-8f2b-0bcabccdb48f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="qty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">qty</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productNamePost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">productNamePost</stringProp>
                  <stringProp name="Argument.value">BACTISEPT ANTIBACTERIAL HANDSOAP 5 LITER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productCodePost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">productCodePost</stringProp>
                  <stringProp name="Argument.value">100006979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mini cart update" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/cart/miniCart/SUBTOTAL</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1648560054368</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cart Page" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/cart</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">24610.0</stringProp>
              <stringProp name="ConstantTimer.delay">12305</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 24610 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="FOC API" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/cart/showAdvFocList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Checkout" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/cart/checkout</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">19950.0</stringProp>
              <stringProp name="ConstantTimer.delay">9975</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 19950 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">myhec/en/checkout/multi/order/placeOrder</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_termsCheck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_termsCheck</stringProp>
                  <stringProp name="Argument.value">on</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="delivery" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">delivery</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="termsCheck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">termsCheck</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="CSRFToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">CSRFToken</stringProp>
                  <stringProp name="Argument.value">3723cf5e-fc61-4274-8f2b-0bcabccdb48f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="poNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">poNumber</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">18188.0</stringProp>
              <stringProp name="ConstantTimer.delay">9094</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 18188 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">j/collect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="de" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">de</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jid</stringProp>
                  <stringProp name="Argument.value">1631996950</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://stg-connect-udp.dksh.com/myhec/en/checkout/orderConfirmation/02329019</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="gjid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gjid</stringProp>
                  <stringProp name="Argument.value">1195693629</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">UA-121969225-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Order Confirmation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_utmz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_utmz</stringProp>
                  <stringProp name="Argument.value">40373856.1639535379.17.5.utmcsr=statics.teams.cdn.office.net|utmccn=(referral)|utmcmd=referral|utmcct=/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1366x768</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">956547969</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">2wg3n15VDCSC8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_utma" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_utma</stringProp>
                  <stringProp name="Argument.value">40373856.1147206744.1606710317.1639535379.1644300387.18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_gid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_gid</stringProp>
                  <stringProp name="Argument.value">1861558451.1648558625</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd1</stringProp>
                  <stringProp name="Argument.value">(not set)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_r" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_r</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">pageview</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_u</stringProp>
                  <stringProp name="Argument.value">QACCAEALAAAAAC~</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_v</stringProp>
                  <stringProp name="Argument.value">j96</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_utmht" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_utmht</stringProp>
                  <stringProp name="Argument.value">1648560123946</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vp</stringProp>
                  <stringProp name="Argument.value">1795x805</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">z</stringProp>
                  <stringProp name="Argument.value">1737198894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="je" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">je</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1147206744.1606710317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>true</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="useGroupName">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">jsapps.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <collectionProp name="DNSCacheManager.hosts"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        <boolProp name="AuthManager.clearEachIteration">true</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        <stringProp name="CookieManager.policy">ignoreCookies</stringProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">2</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Before Login">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://jsapps.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/myhec-spa/en/MYR/login">
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">myhec-spa/en/MYR/login</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/orgUsers/current?lang=en&amp;curr=MYR" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/orgUsers/current</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?pageType=ContentPage&amp;pageLabelOrId=%2Flogin&amp;lang=en&amp;curr=MYR">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">ContentPage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageLabelOrId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageLabelOrId</stringProp>
                  <stringProp name="Argument.value">/login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/languages?lang=en&amp;curr=MYR">
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/languages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=9&amp;componentIds=AccountManagerLink%2CAddressBookLink%2CDashboardLink%2CSaveOrderListLink%2CPersonalDetailsLink%2CUpdatePasswordLink%2CFAQLinkComponent%2CContactUsMyaccount%2CSignOutLink&amp;lang=en&amp;curr=MYR">
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AccountManagerLink,AddressBookLink,DashboardLink,SaveOrderListLink,PersonalDetailsLink,UpdatePasswordLink,FAQLinkComponent,ContactUsMyaccount,SignOutLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR">
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR">
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR">
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/trackAndTraceUrl?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/trackAndTraceUrl</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/validate/terms-and-conditions?userId=101104381&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/validate/terms-and-conditions</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userId</stringProp>
                  <stringProp name="Argument.value">101104381</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/authorizationserver/oauth/token" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">authorizationserver/oauth/token</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">dksh1234</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">custom</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="siteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">siteId</stringProp>
                  <stringProp name="Argument.value">myhec-spa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">Dk$H@spartacus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">client-spartacus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">101104381</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">refreshToken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;refresh_token&quot; : &quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">token</stringProp>
              <stringProp name="RegexExtractor.regex">bearer\s(.+?)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accessToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">authorizationserver/oauth/token</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">refresh_token</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="refresh_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;refresh_token_value&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">refresh_token</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/current/carts?fields=carts(DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),totalUnitCount,deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue,%20value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description)&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/current/carts</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">carts(DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),totalUnitCount,deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue, value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">token</stringProp>
              <stringProp name="RegexExtractor.regex">bearer\s(.+?)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">cartcode</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=9&amp;componentIds=AccountManagerLink%2CAddressBookLink%2CDashboardLink%2CSaveOrderListLink%2CPersonalDetailsLink%2CUpdatePasswordLink%2CFAQLinkComponent%2CContactUsMyaccount%2CSignOutLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AccountManagerLink,AddressBookLink,DashboardLink,SaveOrderListLink,PersonalDetailsLink,UpdatePasswordLink,FAQLinkComponent,ContactUsMyaccount,SignOutLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/orgUsers/current?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/orgUsers/current</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/orgUsers/current?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/orgUsers/current</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/orgUsers/current?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/orgUsers/current</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?pageType=ContentPage&amp;pageLabelOrId=%2Fmy-account%2Ftrack-orders&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">ContentPage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageLabelOrId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageLabelOrId</stringProp>
                  <stringProp name="Argument.value">/my-account/track-orders</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/carts?fields=carts(DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),totalUnitCount,deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue,%20value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description)&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/carts</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">carts(DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),totalUnitCount,deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue, value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">cartcode</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">// Retrieve the cart code from the variable
def cartCode = vars.get(&quot;cartCode&quot;);

// Construct the complete URL
def baseUrl = &quot;occ/v2/myhec-spa/users/101104381/carts/&quot;;
def fullUrl = baseUrl + cartCode;

// Set the complete URL in a variable for later use
vars.put(&quot;fullUrl&quot;, fullUrl);
</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/getcreditamount?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/getcreditamount</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/industries?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/industries</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/getcreditamount?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/getcreditamount</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/industries?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/industries</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=8&amp;componentIds=NotificationBarParagraphComponent%2CConnect_Logo_Banner%2CMyAccountComponent%2CSiteLogoComponent%2CMYHECCategoryNavComponent%2CFooterCmsComponent%2CFooterResource2CmsComponent%2CFooterResource3CmsComponent&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">NotificationBarParagraphComponent,Connect_Logo_Banner,MyAccountComponent,SiteLogoComponent,MYHECCategoryNavComponent,FooterCmsComponent,FooterResource2CmsComponent,FooterResource3CmsComponent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=1&amp;componentIds=MyhecFooterNavigationComponnet&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">MyhecFooterNavigationComponnet</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=8&amp;componentIds=HomePageRotatebanner1%2Cmyhec_homepage_banner_1%2Cabbott%2CtigerBalm%2Csanofi%2Cbayer%2Croche%2Cpfizer&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">HomePageRotatebanner1,myhec_homepage_banner_1,abbott,tigerBalm,sanofi,bayer,roche,pfizer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shipTo/104137887/recommended/products?fields=FULL&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shipTo/104137887/recommended/products</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">FULL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shipTo/104137887/recommended/products?fields=FULL&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shipTo/104137887/recommended/products</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">FULL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/setDefaultShipto/104137887?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/setDefaultShipto/104137887?lang=en&amp;curr=MYR</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;responseType&quot;:&quot;void&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=11&amp;componentIds=FooterOrderLinkComponent%2CFooterFaqLinkComponent%2CFooterContactUsLinkComponent%2CFooterSaveOrderLinkComponent%2CFooterWishListLinkComponent%2CFooterResourceLinkComponent%2CFooterPersonalLinkComponent%2CFooterUpdatePasswordLinkComponent%2CFooterAccountManagerLinkComponent%2CFooterAddressBookLinkComponent%2CFooterDashboardLinkComponent&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">FooterOrderLinkComponent,FooterFaqLinkComponent,FooterContactUsLinkComponent,FooterSaveOrderLinkComponent,FooterWishListLinkComponent,FooterResourceLinkComponent,FooterPersonalLinkComponent,FooterUpdatePasswordLinkComponent,FooterAccountManagerLinkComponent,FooterAddressBookLinkComponent,FooterDashboardLinkComponent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/products/prices?productCodes=100002802%2C100002860%2C100002994%2C100002997%2C100002998&amp;fields=PRICE&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/products/prices</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="productCodes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">productCodes</stringProp>
                  <stringProp name="Argument.value">100002802,100002860,100002994,100002997,100002998</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">PRICE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/products/prices?productCodes=100002802%2C100002860%2C100002994%2C100002997%2C100002998&amp;fields=PRICE&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/products/prices</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="productCodes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">productCodes</stringProp>
                  <stringProp name="Argument.value">100002802,100002860,100002994,100002997,100002998</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">PRICE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All Products">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://jsapps.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/c/allcategories" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">c/allcategories</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">37038.0</stringProp>
              <stringProp name="ConstantTimer.delay">18519</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 37038 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/orgUsers/current?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/orgUsers/current</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?pageType=CategoryPage&amp;code=allcategories&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">CategoryPage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/orgUsers/101104381?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/orgUsers/101104381</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/getcreditamount?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/getcreditamount</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/industries?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/industries</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/languages?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/languages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/carts/03842003?refreshCart=true&amp;fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue,%20value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/occ/v2/myhec-spa/users/101104381/carts/${cartcode}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="refreshCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">refreshCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">FULL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">// Retrieve the cart code from the variable
def cartCode = vars.get(&quot;cartCode&quot;);

// Construct the complete URL
def baseUrl = &quot;occ/v2/myhec-spa/users/101104381/carts/&quot;;
def fullUrl = baseUrl + cartCode;

// Set the complete URL in a variable for later use
vars.put(&quot;fullUrl&quot;, fullUrl);
</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=9&amp;componentIds=AccountManagerLink%2CAddressBookLink%2CDashboardLink%2CSaveOrderListLink%2CPersonalDetailsLink%2CUpdatePasswordLink%2CFAQLinkComponent%2CContactUsMyaccount%2CSignOutLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AccountManagerLink,AddressBookLink,DashboardLink,SaveOrderListLink,PersonalDetailsLink,UpdatePasswordLink,FAQLinkComponent,ContactUsMyaccount,SignOutLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/getcreditamount?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/getcreditamount</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/industries?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/industries</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/products/search?fields=products(code%2Cname%2Csummary%2Cconfigurable%2CconfiguratorType%2Cmultidimensional%2Cprice(FULL)%2Cimages(DEFAULT)%2Cstock(FULL)%2CaverageRating%2CvariantOptions)%2Cfacets%2Cbreadcrumbs%2Cpagination(DEFAULT)%2Csorts(DEFAULT)%2CfreeTextSearch%2CcurrentQuery&amp;query=%3Arelevance%3AallCategories%3Aallcategories&amp;pageSize=12&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/products/search</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">:relevance:allCategories:allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">products(code,name,summary,configurable,configuratorType,multidimensional,price(FULL),images(DEFAULT),stock(FULL),averageRating,variantOptions),facets,breadcrumbs,pagination(DEFAULT),sorts(DEFAULT),freeTextSearch,currentQuery</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="sap-commerce-cloud-user-id" elementType="Header">
                  <stringProp name="Header.name">sap-commerce-cloud-user-id</stringProp>
                  <stringProp name="Header.value">101104381</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=3&amp;componentIds=MyhecFooterNavigationComponnet%2CFooterResource2CmsComponent%2CFooterResource3CmsComponent&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">MyhecFooterNavigationComponnet,FooterResource2CmsComponent,FooterResource3CmsComponent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;categoryCode=allcategories&amp;currentPage=0&amp;pageSize=11&amp;componentIds=FooterOrderLinkComponent%2CFooterFaqLinkComponent%2CFooterContactUsLinkComponent%2CFooterSaveOrderLinkComponent%2CFooterWishListLinkComponent%2CFooterResourceLinkComponent%2CFooterPersonalLinkComponent%2CFooterUpdatePasswordLinkComponent%2CFooterAccountManagerLinkComponent%2CFooterAddressBookLinkComponent%2CFooterDashboardLinkComponent&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">FooterOrderLinkComponent,FooterFaqLinkComponent,FooterContactUsLinkComponent,FooterSaveOrderLinkComponent,FooterWishListLinkComponent,FooterResourceLinkComponent,FooterPersonalLinkComponent,FooterUpdatePasswordLinkComponent,FooterAccountManagerLinkComponent,FooterAddressBookLinkComponent,FooterDashboardLinkComponent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryCode</stringProp>
                  <stringProp name="Argument.value">allcategories</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/products/prices?productCodes=100512602%2C100370763%2C100396280%2C100525786%2C100528832%2C100430079%2C100429988%2C100430368%2C100529554%2C100529638%2C100530851%2C100453176&amp;fields=PRICE&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/products/prices</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="productCodes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">productCodes</stringProp>
                  <stringProp name="Argument.value">100512602,100370763,100396280,100525786,100528832,100430079,100429988,100430368,100529554,100529638,100530851,100453176</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">PRICE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Search one product">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/products/search?fields=products(code%2Cname%2Csummary%2Cconfigurable%2CconfiguratorType%2Cmultidimensional%2Cprice(FULL)%2Cimages(DEFAULT)%2Cstock(FULL)%2CaverageRating%2CvariantOptions)%2Cfacets%2Cbreadcrumbs%2Cpagination(DEFAULT)%2Csorts(DEFAULT)%2CfreeTextSearch%2CcurrentQuery&amp;query=100370763&amp;pageSize=4&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/products/search</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">100370763</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">products(code,name,summary,configurable,configuratorType,multidimensional,price(FULL),images(DEFAULT),stock(FULL),averageRating,variantOptions),facets,breadcrumbs,pagination(DEFAULT),sorts(DEFAULT),freeTextSearch,currentQuery</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="sap-commerce-cloud-user-id" elementType="Header">
                  <stringProp name="Header.name">sap-commerce-cloud-user-id</stringProp>
                  <stringProp name="Header.value">101104381</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/products/suggestions?term=100370763&amp;max=6&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/products/suggestions</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="max" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">max</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="term" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">term</stringProp>
                  <stringProp name="Argument.value">100370763</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?pageType=ContentPage&amp;pageLabelOrId=search&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">ContentPage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageLabelOrId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageLabelOrId</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=3&amp;componentIds=MyhecFooterNavigationComponnet%2CFooterResource2CmsComponent%2CFooterResource3CmsComponent&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">MyhecFooterNavigationComponnet,FooterResource2CmsComponent,FooterResource3CmsComponent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/products/search?fields=products(code%2Cname%2Csummary%2Cconfigurable%2CconfiguratorType%2Cmultidimensional%2Cprice(FULL)%2Cimages(DEFAULT)%2Cstock(FULL)%2CaverageRating%2CvariantOptions)%2Cfacets%2Cbreadcrumbs%2Cpagination(DEFAULT)%2Csorts(DEFAULT)%2CfreeTextSearch%2CcurrentQuery&amp;query=100370763&amp;pageSize=12&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/products/search</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">100370763</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">products(code,name,summary,configurable,configuratorType,multidimensional,price(FULL),images(DEFAULT),stock(FULL),averageRating,variantOptions),facets,breadcrumbs,pagination(DEFAULT),sorts(DEFAULT),freeTextSearch,currentQuery</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="sap-commerce-cloud-user-id" elementType="Header">
                  <stringProp name="Header.name">sap-commerce-cloud-user-id</stringProp>
                  <stringProp name="Header.value">101104381</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/products/prices?productCodes=100370763&amp;fields=PRICE&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/products/prices</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="productCodes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productCodes</stringProp>
                  <stringProp name="Argument.value">100370763</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">PRICE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PDP" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?pageType=ProductPage&amp;code=100370763&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">ProductPage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                  <stringProp name="Argument.value">100370763</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/products/100370763?fields=FULL&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/products/100370763</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">FULL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;productCode=100370763&amp;currentPage=0&amp;pageSize=4&amp;componentIds=MyhecFooterNavigationComponnet%2CFooterResource2CmsComponent%2CFooterResource3CmsComponent%2CProductDetailsTabComponent&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="productCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productCode</stringProp>
                  <stringProp name="Argument.value">100370763</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">MyhecFooterNavigationComponnet,FooterResource2CmsComponent,FooterResource3CmsComponent,ProductDetailsTabComponent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/products/100370763?fields=FULL&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/products/100370763</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">FULL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/products/prices?productCodes=100370763&amp;fields=PRICE&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/products/prices</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="productCodes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productCodes</stringProp>
                  <stringProp name="Argument.value">100370763</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">PRICE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;productCode=100370763&amp;currentPage=0&amp;pageSize=1&amp;componentIds=&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="productCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productCode</stringProp>
                  <stringProp name="Argument.value">100370763</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Add Product" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/orgUsers/101104381/carts/03842003/entries?quantity=10&amp;code=100370763&amp;lang=en&amp;curr=MYR" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/orgUsers/101104381/carts/${cartcode}/entries?quantity=10&amp;code=100370763&amp;lang=en&amp;curr=MYR</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/carts/03842003?refreshCart=true&amp;fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue,%20value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/carts/${cartcode}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="refreshCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">refreshCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cart Page" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?pageType=ContentPage&amp;pageLabelOrId=%2Fcart&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">ContentPage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageLabelOrId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageLabelOrId</stringProp>
                  <stringProp name="Argument.value">/cart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/carts/03842003?refreshCart=true&amp;fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue,%20value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description&amp;lang=en&amp;curr=MYR&amp;removefocselection=true&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/carts/${cartcode}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="removefocselection" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">removefocselection</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="refreshCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">refreshCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/getcreditamount?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/getcreditamount</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CheckOut" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?pageType=ContentPage&amp;pageLabelOrId=%2Fcheck-out&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">ContentPage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageLabelOrId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageLabelOrId</stringProp>
                  <stringProp name="Argument.value">/check-out</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/carts/03842003?refreshCart=true&amp;fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue,%20value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/carts/${cartcode}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="refreshCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">refreshCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/payeraddresses?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/payeraddresses</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/payeraddresses?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/payeraddresses</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/payeraddresses?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/payeraddresses</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Place Order" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/carts/03842003/update?lang=en&amp;curr=MYR" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/carts/${cartcode}/update</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;deliveryInstruction&quot;:&quot;Test Delivery&quot;,&quot;poNumber&quot;:&quot;Test PO&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/orgUsers/101104381/orders?fields=FULL&amp;cartId=03842003&amp;termsChecked=true&amp;lang=en&amp;curr=MYR" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/orgUsers/101104381/orders?fields=FULL&amp;cartId=${cartcode}&amp;termsChecked=true&amp;lang=en&amp;curr=MYR</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/carts/03842003?refreshCart=true&amp;fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue,%20value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/carts/${cartcode}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="refreshCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">refreshCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">FULL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?pageType=ContentPage&amp;pageLabelOrId=%2Forder-confirmation&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">ContentPage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageLabelOrId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageLabelOrId</stringProp>
                  <stringProp name="Argument.value">/order-confirmation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/carts?fields=carts(DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),totalUnitCount,deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue,%20value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description)&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/carts</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">carts(DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),totalUnitCount,deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue, value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/carts/?refreshCart=true&amp;fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue,%20value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/carts/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="refreshCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">refreshCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">FULL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/carts/03842006?refreshCart=true&amp;fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue,%20value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/carts/${cartcode}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="refreshCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">refreshCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">FULL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Track and Order" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://jsapps.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/my-account/track-orders" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">my-account/track-orders</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">193170.0</stringProp>
              <stringProp name="ConstantTimer.delay">96585</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 193170 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/orgUsers/current?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/orgUsers/current</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?pageType=ContentPage&amp;pageLabelOrId=%2Fmy-account%2Ftrack-orders&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">ContentPage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageLabelOrId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageLabelOrId</stringProp>
                  <stringProp name="Argument.value">/my-account/track-orders</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/orgUsers/101104381?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/orgUsers/101104381</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/getcreditamount?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/getcreditamount</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/industries?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/industries</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/languages?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/languages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/carts/03842006?refreshCart=true&amp;fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue,%20value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user,saveTime,name,description&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/carts/${cartcode}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="refreshCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">refreshCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">FULL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=9&amp;componentIds=AccountManagerLink%2CAddressBookLink%2CDashboardLink%2CSaveOrderListLink%2CPersonalDetailsLink%2CUpdatePasswordLink%2CFAQLinkComponent%2CContactUsMyaccount%2CSignOutLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AccountManagerLink,AddressBookLink,DashboardLink,SaveOrderListLink,PersonalDetailsLink,UpdatePasswordLink,FAQLinkComponent,ContactUsMyaccount,SignOutLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/getcreditamount?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/getcreditamount</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/shiptovalues?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/shiptovalues</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/industries?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/industries</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/connect/order/params?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/connect/order/params</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/connect/orders?currentPage=0&amp;fields=DEFAULT&amp;pageSize=12&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/connect/orders?currentPage=0&amp;fields=DEFAULT&amp;pageSize=12&amp;lang=en&amp;curr=MYR</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;createTimeEnd&quot;:&quot;&quot;,&quot;createTimeStart&quot;:&quot;&quot;,&quot;orderChannel&quot;:&quot;&quot;,&quot;orderStatus&quot;:&quot;&quot;,&quot;orderCode&quot;:&quot;&quot;,&quot;purchaseOrderNumber&quot;:&quot;&quot;,&quot;productName&quot;:&quot;&quot;,&quot;productCode&quot;:&quot;&quot;,&quot;oldMaterialCode&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/trackAndTraceUrl?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/trackAndTraceUrl</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=3&amp;componentIds=MyhecFooterNavigationComponnet%2CFooterResource2CmsComponent%2CFooterResource3CmsComponent&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">MyhecFooterNavigationComponnet,FooterResource2CmsComponent,FooterResource3CmsComponent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=11&amp;componentIds=FooterOrderLinkComponent%2CFooterFaqLinkComponent%2CFooterContactUsLinkComponent%2CFooterSaveOrderLinkComponent%2CFooterWishListLinkComponent%2CFooterResourceLinkComponent%2CFooterPersonalLinkComponent%2CFooterUpdatePasswordLinkComponent%2CFooterAccountManagerLinkComponent%2CFooterAddressBookLinkComponent%2CFooterDashboardLinkComponent&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">FooterOrderLinkComponent,FooterFaqLinkComponent,FooterContactUsLinkComponent,FooterSaveOrderLinkComponent,FooterWishListLinkComponent,FooterResourceLinkComponent,FooterPersonalLinkComponent,FooterUpdatePasswordLinkComponent,FooterAccountManagerLinkComponent,FooterAddressBookLinkComponent,FooterDashboardLinkComponent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Search and Open order" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/connect/orders?currentPage=0&amp;fields=DEFAULT&amp;pageSize=12&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/connect/orders?currentPage=0&amp;fields=DEFAULT&amp;pageSize=12&amp;lang=en&amp;curr=MYR</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;createTimeEnd&quot;:&quot;&quot;,&quot;createTimeStart&quot;:&quot;&quot;,&quot;orderChannel&quot;:&quot;&quot;,&quot;orderStatus&quot;:&quot;&quot;,&quot;orderCode&quot;:&quot;1112536002&quot;,&quot;purchaseOrderNumber&quot;:&quot;&quot;,&quot;productName&quot;:&quot;&quot;,&quot;productCode&quot;:&quot;&quot;,&quot;oldMaterialCode&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/users/101104381/order/03842005?fields=FULL&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/users/101104381/order/03842005</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">FULL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Sign Out" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://jsapps.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/logout" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">logout</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">65422.0</stringProp>
              <stringProp name="ConstantTimer.delay">32711</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 65422 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/orgUsers/current?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/orgUsers/current</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?pageType=ContentPage&amp;pageLabelOrId=%2Flogout&amp;lang=en&amp;curr=MYR" enabled="false">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">ContentPage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageLabelOrId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageLabelOrId</stringProp>
                  <stringProp name="Argument.value">/logout</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?pageType=ContentPage&amp;pageLabelOrId=%2Fnot-found&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">ContentPage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageLabelOrId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageLabelOrId</stringProp>
                  <stringProp name="Argument.value">/not-found</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/pages?pageType=ContentPage&amp;pageLabelOrId=%2Flogin&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/pages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">ContentPage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageLabelOrId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageLabelOrId</stringProp>
                  <stringProp name="Argument.value">/login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/languages?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/languages</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=9&amp;componentIds=AccountManagerLink%2CAddressBookLink%2CDashboardLink%2CSaveOrderListLink%2CPersonalDetailsLink%2CUpdatePasswordLink%2CFAQLinkComponent%2CContactUsMyaccount%2CSignOutLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AccountManagerLink,AddressBookLink,DashboardLink,SaveOrderListLink,PersonalDetailsLink,UpdatePasswordLink,FAQLinkComponent,ContactUsMyaccount,SignOutLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/trackAndTraceUrl?lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/trackAndTraceUrl</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=AllProductsCategoryLink%2CcardiovascularsystemLink%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CcardiovascularsystemLinkComponent%2CreninangiotensystagentLink%2ClipidregantiatheromaprepLink%2CcardiactherapyLink%2CcerebperiphevasotherapLink%2CdiureticsLink%2CbetablockingagentsLink%2CavaricahaemoprepLink%2CcalciumantagonistsLink%2CantihypertensivesLink%2CothcardiovascularprdsLink%2CconsumerhealthLink%2CoralcareLink%2CvitaminsdietarysupplementsLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CappetitestimulantsLink%2CcardiovascularLink%2CvitaminsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink%2CobstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CconsumerhealthLinkComponent%2CoralcareLink%2CbodyskincareLink%2CconsumerhealthnonspecLink%2CpregnancytestkitsLink%2CfacialskincareLink%2CinfantnutritionLink%2CvitaminsdietarysupplementsLink%2CdietingweightlossLink%2CsunscreensunprotectionLink%2CanalgesicsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">AllProductsCategoryLink,cardiovascularsystemLink,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,cardiovascularsystemLinkComponent,reninangiotensystagentLink,lipidregantiatheromaprepLink,cardiactherapyLink,cerebperiphevasotherapLink,diureticsLink,betablockingagentsLink,avaricahaemoprepLink,calciumantagonistsLink,antihypertensivesLink,othcardiovascularprdsLink,consumerhealthLink,oralcareLink,vitaminsdietarysupplementsLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,appetitestimulantsLink,cardiovascularLink,vitaminsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink,obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,consumerhealthLinkComponent,oralcareLink,bodyskincareLink,consumerhealthnonspecLink,pregnancytestkitsLink,facialskincareLink,infantnutritionLink,vitaminsdietarysupplementsLink,dietingweightlossLink,sunscreensunprotectionLink,analgesicsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=obstetricalgynaecologicalLink%2CcondomsLink%2CsmokingcessationaidsLink%2CsensoryorgansLink%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CsensoryorgansLinkComponent%2CophthalmologicalsLink%2CotologicalsLink%2CeyeearpreparationsLink%2CmusculoskeletalsystemLink%2CothermusculoskeletalsystLink%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CmusculoskeletalsystemLinkComponent%2CainflamantirheumaticsysLink%2CmusclerelaxantsLink%2CothermusculoskeletalsystLink%2CantirheumaticstopicalLink%2CantigoutpreparationsLink%2CantirheumaticsystemLink%2CalimentarytmetabolismLink%2CdrugsusedindiabetesLink%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink%2CdrugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CsystemicantibacterialsLink%2CstomatologicalsLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CalimentarytmetabolismLinkComponent%2CmineralsupplementsLink%2CfunctlgidisorderdrugLink%2CaacidaflataulcerantsLink%2CvitaminsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">obstetricalgynaecologicalLink,condomsLink,smokingcessationaidsLink,sensoryorgansLink,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,sensoryorgansLinkComponent,ophthalmologicalsLink,otologicalsLink,eyeearpreparationsLink,musculoskeletalsystemLink,othermusculoskeletalsystLink,ainflamantirheumaticsysLink,musclerelaxantsLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,musculoskeletalsystemLinkComponent,ainflamantirheumaticsysLink,musclerelaxantsLink,othermusculoskeletalsystLink,antirheumaticstopicalLink,antigoutpreparationsLink,antirheumaticsystemLink,alimentarytmetabolismLink,drugsusedindiabetesLink,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink,drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,systemicantibacterialsLink,stomatologicalsLink,constipatbowelcleanserLink,intestinaldisorderprodLink,alimentarytmetabolismLinkComponent,mineralsupplementsLink,functlgidisorderdrugLink,aacidaflataulcerantsLink,vitaminsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=drugforconstipbowelcleanLink%2CtonicsLink%2CstomatologicalsmouthprepLink%2CantiemeticsantinauseantsLink%2CothermetabolicproductsLink%2CdigestivesincenzymesLink%2CcholagogueshepatprotectLink%2CappetitestimulantsLink%2CadiaroralelecainflamLink%2CantiobesityprepexcdieteticLink%2CstomatologicalsLink%2CdrugsusedindiabetesLink%2CconstipatbowelcleanserLink%2CintestinaldisorderprodLink%2CbloodbformingorgansLink%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CallothhaematologicalagentsLink%2CantianaemicsLink%2CbloodbformingorgansLinkComponent%2CantithromboticagentsLink%2CantianaemicspreparationsLink%2CbloodcoagsystothprodLink%2CantianaemicsLink%2CdiagnostictestsLink%2CdiagnosticagentsLink%2CdiagnosticimagingLink%2CdiagnosticagentsLinkComponent%2CdiagnostictestsLink%2CdiagnosticimagingLink%2CdermatologicalsLink%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CotherdermatologicalsprepLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink%2CtopicalantipruriticsLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CdermatologicalsLinkComponent%2CnonsterprdinflamskinLink%2CtopicalabactsaviralsLink%2CtopicalcorticosteroidsLink%2CantisepticsdisinfectantsLink%2CantiacnepreparationsLink%2CwoundhealingagentsLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">drugforconstipbowelcleanLink,tonicsLink,stomatologicalsmouthprepLink,antiemeticsantinauseantsLink,othermetabolicproductsLink,digestivesincenzymesLink,cholagogueshepatprotectLink,appetitestimulantsLink,adiaroralelecainflamLink,antiobesityprepexcdieteticLink,stomatologicalsLink,drugsusedindiabetesLink,constipatbowelcleanserLink,intestinaldisorderprodLink,bloodbformingorgansLink,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,allothhaematologicalagentsLink,antianaemicsLink,bloodbformingorgansLinkComponent,antithromboticagentsLink,antianaemicspreparationsLink,bloodcoagsystothprodLink,antianaemicsLink,diagnostictestsLink,diagnosticagentsLink,diagnosticimagingLink,diagnosticagentsLinkComponent,diagnostictestsLink,diagnosticimagingLink,dermatologicalsLink,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,otherdermatologicalsprepLink,antiacnepreparationsLink,woundhealingagentsLink,topicalantipruriticsLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,dermatologicalsLinkComponent,nonsterprdinflamskinLink,topicalabactsaviralsLink,topicalcorticosteroidsLink,antisepticsdisinfectantsLink,antiacnepreparationsLink,woundhealingagentsLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=50&amp;componentIds=otherdermatologicalsprepLink%2CantifungalsdermatologiclLink%2CemollientsprotectivesLink%2CotherdermatologicalsLink%2CconsumergoodsLink%2CconsumerhealthnonspecLink%2CfacialskincareLink%2CvitaminsdietarysupplementsLink%2CinfantnutritionLink%2CconsumergoodsLinkComponent%2CveterinaryLink%2CveterinaryLinkComponent%2CparasitologyLink%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2CparasitologyLinkComponent%2CantiprotozanthelmintLink%2CectoparasiticidesLink%2ChospitalsolutionsLink%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2ChospitalsolutionsLinkComponent%2CwholebloodplassubssolLink%2CdialysissolutionsLink%2CnonhecproductsLink%2CSystemicAntiInfectivesLink%2CvaccinesLink%2CSystemicAntiInfectivesLink%2CantiviralssystemicuseLink%2CsystemicantibacterialsLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CantimycobacterialsLink%2CdrugsusedindiabetesLink%2CsystantifungalagentsLink%2CsystemicantibacterialsLink%2CantiviralssystemicuseLink%2CseragammaglobulinLink%2CsystantifungalagentsinjLink%2CMedicalDevicesLink%2CMedicalDevicesLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CbodyskincareLink%2CorthopaedicLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">otherdermatologicalsprepLink,antifungalsdermatologiclLink,emollientsprotectivesLink,otherdermatologicalsLink,consumergoodsLink,consumerhealthnonspecLink,facialskincareLink,vitaminsdietarysupplementsLink,infantnutritionLink,consumergoodsLinkComponent,veterinaryLink,veterinaryLinkComponent,parasitologyLink,antiprotozanthelmintLink,ectoparasiticidesLink,parasitologyLinkComponent,antiprotozanthelmintLink,ectoparasiticidesLink,hospitalsolutionsLink,wholebloodplassubssolLink,dialysissolutionsLink,hospitalsolutionsLinkComponent,wholebloodplassubssolLink,dialysissolutionsLink,nonhecproductsLink,SystemicAntiInfectivesLink,vaccinesLink,SystemicAntiInfectivesLink,antiviralssystemicuseLink,systemicantibacterialsLink,seragammaglobulinLink,systantifungalagentsinjLink,antimycobacterialsLink,drugsusedindiabetesLink,systantifungalagentsLink,systemicantibacterialsLink,antiviralssystemicuseLink,seragammaglobulinLink,systantifungalagentsinjLink,MedicalDevicesLink,MedicalDevicesLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,bodyskincareLink,orthopaedicLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=14&amp;componentIds=haematologydialysisLink%2CconsumerhealthnonspecLink%2CophthalmicLink%2CearnosethroatLink%2CinvitrodiagnosticsLink%2CgeneralhosppersonaluseLink%2CgeneralplasticsurgeryLink%2CmedicaldevicenonspecLink%2CcardiovascularLink%2CorthopaedicLink%2ChaematologydialysisLink%2COrdersLink%2CResourceCenterLink%2CStatementLink&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">haematologydialysisLink,consumerhealthnonspecLink,ophthalmicLink,earnosethroatLink,invitrodiagnosticsLink,generalhosppersonaluseLink,generalplasticsurgeryLink,medicaldevicenonspecLink,cardiovascularLink,orthopaedicLink,haematologydialysisLink,OrdersLink,ResourceCenterLink,StatementLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.c8uadjzv40-dksh1-s1-public.model-t.cc.commerce.ondemand.com/occ/v2/myhec-spa/cms/components?fields=DEFAULT&amp;currentPage=0&amp;pageSize=2&amp;componentIds=FooterResource2CmsComponent%2CFooterResource3CmsComponent&amp;lang=en&amp;curr=MYR" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">occ/v2/myhec-spa/cms/components</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="componentIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">componentIds</stringProp>
                  <stringProp name="Argument.value">FooterResource2CmsComponent,FooterResource3CmsComponent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">DEFAULT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="curr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">curr</stringProp>
                  <stringProp name="Argument.value">MYR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Anonymous-Consents" elementType="Header">
                  <stringProp name="Header.name">X-Anonymous-Consents</stringProp>
                  <stringProp name="Header.value">%5B%5D</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
